#!/usr/bin/env cached-nix-shell
#! nix-shell -p dateutils -i zsh
#
# Displays the time since (or until) $1 in a human readable format (e.g. 4h 25m
# 55s). If given a file, the modified time is used. If $1 == "--", then this
# script acts as a converter, converting $2 into human a readable format, e.g.
# since -- 72
# #=> 1m 12s

set -e
(( $# > 0 )) || exit

_read_arg() {
  if [[ "$1" =~ ^[a-zA-Z+-] ]]; then
    echo "$1"
  else
    # If given a file, give time since last modification
    [[ -e "$1" ]] && arg=reference || arg=date
    date --$arg="$1" +"%Y-%m-%dT%H:%M:%S"
  fi
}

_argv() {
  for arg in "$@"; do
    args+="$(_read_arg "$arg")"
  done
  echo "${args[@]}"
}

_tz() {
  timedatectl show | grep Timezone= | cut -d= -f2
}

_main() {
  declare -a args
  args=( $(_argv $@) )
  if [[ $1 = [+-]* || $# -eq 1 ]]; then
    args=( now ${args[@]} )
  fi
  if [[ "${args[2]}" = [+-]* ]]; then
    dateadd --zone="$(_tz)" "${args[@]}"
  else
    result="$(datediff -f "%y:%m:%d:%H:%M" "${args[@]}")"
    parts=( ${(@s/:/)result} )
    (( parts[1] == 0 )) || echo -n "${parts[1]}y "
    (( parts[2] == 0 )) || echo -n "${parts[2]}m "
    (( parts[3] == 0 )) || echo -n "${parts[3]}d "
    (( parts[4] == 0 )) || echo -n "${parts[4]}hr "
    (( parts[5] == 0 )) || echo -n "${parts[5]}min "
    echo
  fi
}

_main $@
