## Behavior ####################

# go zsh, go
set-option -g default-shell $SHELL

# set utf-8
set-window-option -g utf8 on
set -g status-utf8 on

# look good
set-option -g default-terminal "screen-256color"

# Zero-based indexing is fine in programming languages, but not so much in
# a multiplexer when zero is on the other side of the keyboard.
set -g base-index 1

# Remove the <C-a> delay
set -s escape-time 0


## Looks ########################

#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg colour234
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


## Controls #####################

# Remap the key prefix
unbind C-b
set -g prefix C-a

# Go to last active window
bind-key C-a last-window

# share clipboard
set-option -g default-command "/usr/local/bin/reattach-to-user-namespace -l $SHELL"

# a mouse
set -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on

# act like vim
set-window-option -g mode-keys vi
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
unbind [
bind ` copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection

# after copying to a tmux buffer, hit y again to copy to clipboard
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
